<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="386" onload="init(evt)" viewBox="0 0 1200 386" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		if (func != null)
			func = func.replace(/ .*/, "");
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
				return a - b;
			if (a < b || a > b)
				return a - b;
			return matches[b] - matches[a];
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="386.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="369" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="369" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.heapBitsSetType (1 samples, 0.75%)</title><rect x="1172.3" y="209" width="8.8" height="15.0" fill="rgb(237,77,51)" rx="2" ry="2" />
<text text-anchor="" x="1175.26" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.scanstack (1 samples, 0.75%)</title><rect x="98.7" y="209" width="8.9" height="15.0" fill="rgb(241,222,28)" rx="2" ry="2" />
<text text-anchor="" x="101.72" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gcDrain (7 samples, 5.26%)</title><rect x="98.7" y="289" width="62.1" height="15.0" fill="rgb(242,89,20)" rx="2" ry="2" />
<text text-anchor="" x="101.72" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtim..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/url.unescape (3 samples, 2.26%)</title><rect x="1083.5" y="209" width="26.7" height="15.0" fill="rgb(240,120,30)" rx="2" ry="2" />
<text text-anchor="" x="1086.53" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/url.parse (16 samples, 12.03%)</title><rect x="968.2" y="225" width="142.0" height="15.0" fill="rgb(218,183,22)" rx="2" ry="2" />
<text text-anchor="" x="971.20" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net/url.parse</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mspan).sweep (1 samples, 0.75%)</title><rect x="870.6" y="113" width="8.9" height="15.0" fill="rgb(229,98,2)" rx="2" ry="2" />
<text text-anchor="" x="873.60" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcache).refill (2 samples, 1.50%)</title><rect x="861.7" y="145" width="17.8" height="15.0" fill="rgb(228,4,0)" rx="2" ry="2" />
<text text-anchor="" x="864.73" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.callers.func1 (1 samples, 0.75%)</title><rect x="453.6" y="49" width="8.9" height="15.0" fill="rgb(210,112,42)" rx="2" ry="2" />
<text text-anchor="" x="456.61" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.callers (1 samples, 0.75%)</title><rect x="453.6" y="81" width="8.9" height="15.0" fill="rgb(240,213,27)" rx="2" ry="2" />
<text text-anchor="" x="456.61" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.heapBitsSetType (2 samples, 1.50%)</title><rect x="888.3" y="193" width="17.8" height="15.0" fill="rgb(225,70,37)" rx="2" ry="2" />
<text text-anchor="" x="891.35" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>regexp.(*Regexp).get (1 samples, 0.75%)</title><rect x="542.3" y="193" width="8.9" height="15.0" fill="rgb(254,6,4)" rx="2" ry="2" />
<text text-anchor="" x="545.33" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.goexit (123 samples, 92.48%)</title><rect x="98.7" y="321" width="1091.3" height="15.0" fill="rgb(244,228,35)" rx="2" ry="2" />
<text text-anchor="" x="101.72" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.goexit</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gentraceback (1 samples, 0.75%)</title><rect x="453.6" y="33" width="8.9" height="15.0" fill="rgb(236,26,49)" rx="2" ry="2" />
<text text-anchor="" x="456.61" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.newarray (3 samples, 2.26%)</title><rect x="480.2" y="145" width="26.6" height="15.0" fill="rgb(236,200,43)" rx="2" ry="2" />
<text text-anchor="" x="483.23" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>strings.Index (1 samples, 0.75%)</title><rect x="1074.7" y="193" width="8.8" height="15.0" fill="rgb(213,76,44)" rx="2" ry="2" />
<text text-anchor="" x="1077.66" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/http.(*exactSig).match (7 samples, 5.26%)</title><rect x="214.1" y="177" width="62.1" height="15.0" fill="rgb(245,8,4)" rx="2" ry="2" />
<text text-anchor="" x="217.06" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net/ht..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mallocgc (3 samples, 2.26%)</title><rect x="1154.5" y="225" width="26.6" height="15.0" fill="rgb(228,193,34)" rx="2" ry="2" />
<text text-anchor="" x="1157.51" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>regexp.(*bitState).push (1 samples, 0.75%)</title><rect x="790.8" y="161" width="8.8" height="15.0" fill="rgb(208,106,17)" rx="2" ry="2" />
<text text-anchor="" x="793.75" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/http.DetectContentType (13 samples, 9.77%)</title><rect x="196.3" y="193" width="115.4" height="15.0" fill="rgb(205,57,36)" rx="2" ry="2" />
<text text-anchor="" x="199.32" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net/http.Detec..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/url.split (1 samples, 0.75%)</title><rect x="1074.7" y="209" width="8.8" height="15.0" fill="rgb(221,90,8)" rx="2" ry="2" />
<text text-anchor="" x="1077.66" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.systemstack (1 samples, 0.75%)</title><rect x="98.7" y="257" width="8.9" height="15.0" fill="rgb(225,200,47)" rx="2" ry="2" />
<text text-anchor="" x="101.72" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sync.(*Mutex).Lock (1 samples, 0.75%)</title><rect x="542.3" y="177" width="8.9" height="15.0" fill="rgb(241,219,1)" rx="2" ry="2" />
<text text-anchor="" x="545.33" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mProf_Malloc (1 samples, 0.75%)</title><rect x="453.6" y="97" width="8.9" height="15.0" fill="rgb(226,18,52)" rx="2" ry="2" />
<text text-anchor="" x="456.61" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/http.Header.Get (2 samples, 1.50%)</title><rect x="311.7" y="193" width="17.7" height="15.0" fill="rgb(210,172,14)" rx="2" ry="2" />
<text text-anchor="" x="314.65" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/url.getscheme (1 samples, 0.75%)</title><rect x="1030.3" y="209" width="8.9" height="15.0" fill="rgb(222,221,37)" rx="2" ry="2" />
<text text-anchor="" x="1033.30" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.systemstack (1 samples, 0.75%)</title><rect x="1163.4" y="193" width="8.9" height="15.0" fill="rgb(251,218,25)" rx="2" ry="2" />
<text text-anchor="" x="1166.38" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>testing.(*B).launch (116 samples, 87.22%)</title><rect x="160.8" y="305" width="1029.2" height="15.0" fill="rgb(242,16,53)" rx="2" ry="2" />
<text text-anchor="" x="163.83" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >testing.(*B).launch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/textproto.MIMEHeader.Set (7 samples, 5.26%)</title><rect x="329.4" y="177" width="62.1" height="15.0" fill="rgb(231,192,35)" rx="2" ry="2" />
<text text-anchor="" x="332.40" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net/te..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcache).nextFree (1 samples, 0.75%)</title><rect x="1163.4" y="209" width="8.9" height="15.0" fill="rgb(232,36,19)" rx="2" ry="2" />
<text text-anchor="" x="1166.38" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.makemap (8 samples, 6.02%)</title><rect x="391.5" y="161" width="71.0" height="15.0" fill="rgb(239,111,38)" rx="2" ry="2" />
<text text-anchor="" x="394.50" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.memmove (1 samples, 0.75%)</title><rect x="178.6" y="209" width="8.8" height="15.0" fill="rgb(235,34,16)" rx="2" ry="2" />
<text text-anchor="" x="181.57" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.newobject (6 samples, 4.51%)</title><rect x="409.2" y="145" width="53.3" height="15.0" fill="rgb(214,41,20)" rx="2" ry="2" />
<text text-anchor="" x="412.25" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.convI2I (3 samples, 2.26%)</title><rect x="906.1" y="241" width="26.6" height="15.0" fill="rgb(242,195,37)" rx="2" ry="2" />
<text text-anchor="" x="909.09" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/http.NewRequest (27 samples, 20.30%)</title><rect x="941.6" y="257" width="239.5" height="15.0" fill="rgb(209,44,11)" rx="2" ry="2" />
<text text-anchor="" x="944.58" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net/http.NewRequest</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.getitab (3 samples, 2.26%)</title><rect x="906.1" y="225" width="26.6" height="15.0" fill="rgb(247,94,9)" rx="2" ry="2" />
<text text-anchor="" x="909.09" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>regexp.(*Regexp).doExecute (36 samples, 27.07%)</title><rect x="542.3" y="209" width="319.4" height="15.0" fill="rgb(244,59,4)" rx="2" ry="2" />
<text text-anchor="" x="545.33" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >regexp.(*Regexp).doExecute</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.heapBitsSetType (1 samples, 0.75%)</title><rect x="533.5" y="161" width="8.8" height="15.0" fill="rgb(250,153,51)" rx="2" ry="2" />
<text text-anchor="" x="536.46" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime/internal/atomic.Xadd64 (1 samples, 0.75%)</title><rect x="870.6" y="97" width="8.9" height="15.0" fill="rgb(216,225,45)" rx="2" ry="2" />
<text text-anchor="" x="873.60" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.makeslice (5 samples, 3.76%)</title><rect x="861.7" y="225" width="44.4" height="15.0" fill="rgb(226,144,49)" rx="2" ry="2" />
<text text-anchor="" x="864.73" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runt..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sync/atomic.CompareAndSwapUint32 (1 samples, 0.75%)</title><rect x="560.1" y="161" width="8.8" height="15.0" fill="rgb(223,4,5)" rx="2" ry="2" />
<text text-anchor="" x="563.08" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.scang (1 samples, 0.75%)</title><rect x="98.7" y="225" width="8.9" height="15.0" fill="rgb(208,29,52)" rx="2" ry="2" />
<text text-anchor="" x="101.72" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/url.parseHost (4 samples, 3.01%)</title><rect x="1039.2" y="193" width="35.5" height="15.0" fill="rgb(220,59,7)" rx="2" ry="2" />
<text text-anchor="" x="1042.17" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcache).nextFree (3 samples, 2.26%)</title><rect x="861.7" y="193" width="26.6" height="15.0" fill="rgb(229,5,25)" rx="2" ry="2" />
<text text-anchor="" x="864.73" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/http/httptest.(*ResponseRecorder).writeHeader (38 samples, 28.57%)</title><rect x="196.3" y="209" width="337.2" height="15.0" fill="rgb(226,43,21)" rx="2" ry="2" />
<text text-anchor="" x="199.32" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net/http/httptest.(*ResponseRecorder).writeHe..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.duffcopy (2 samples, 1.50%)</title><rect x="835.1" y="161" width="17.8" height="15.0" fill="rgb(230,175,51)" rx="2" ry="2" />
<text text-anchor="" x="838.11" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.scanobject (6 samples, 4.51%)</title><rect x="107.6" y="273" width="53.2" height="15.0" fill="rgb(227,47,37)" rx="2" ry="2" />
<text text-anchor="" x="110.59" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>strings.Index (1 samples, 0.75%)</title><rect x="1181.1" y="241" width="8.9" height="15.0" fill="rgb(224,115,11)" rx="2" ry="2" />
<text text-anchor="" x="1184.13" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mapassign1 (5 samples, 3.76%)</title><rect x="338.3" y="161" width="44.3" height="15.0" fill="rgb(210,75,4)" rx="2" ry="2" />
<text text-anchor="" x="341.27" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runt..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/http.(*maskedSig).match (1 samples, 0.75%)</title><rect x="302.8" y="177" width="8.9" height="15.0" fill="rgb(220,172,33)" rx="2" ry="2" />
<text text-anchor="" x="305.78" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/url.split (2 samples, 1.50%)</title><rect x="1110.2" y="225" width="17.7" height="15.0" fill="rgb(220,83,42)" rx="2" ry="2" />
<text text-anchor="" x="1113.15" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/http/httptest.(*ResponseRecorder).Write (39 samples, 29.32%)</title><rect x="187.4" y="225" width="346.1" height="15.0" fill="rgb(226,109,28)" rx="2" ry="2" />
<text text-anchor="" x="190.44" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net/http/httptest.(*ResponseRecorder).Write</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.profilealloc (1 samples, 0.75%)</title><rect x="453.6" y="113" width="8.9" height="15.0" fill="rgb(214,191,17)" rx="2" ry="2" />
<text text-anchor="" x="456.61" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mapiternext (3 samples, 2.26%)</title><rect x="506.8" y="145" width="26.7" height="15.0" fill="rgb(243,25,34)" rx="2" ry="2" />
<text text-anchor="" x="509.84" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>regexp.(*inputString).step (4 samples, 3.01%)</title><rect x="799.6" y="161" width="35.5" height="15.0" fill="rgb(232,117,31)" rx="2" ry="2" />
<text text-anchor="" x="802.62" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >reg..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/url.shouldEscape (1 samples, 0.75%)</title><rect x="1065.8" y="161" width="8.9" height="15.0" fill="rgb(253,62,43)" rx="2" ry="2" />
<text text-anchor="" x="1068.79" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mallocgc (1 samples, 0.75%)</title><rect x="852.9" y="177" width="8.8" height="15.0" fill="rgb(215,191,50)" rx="2" ry="2" />
<text text-anchor="" x="855.86" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.typedmemmove (1 samples, 0.75%)</title><rect x="932.7" y="225" width="8.9" height="15.0" fill="rgb(218,211,7)" rx="2" ry="2" />
<text text-anchor="" x="935.71" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.heapBitsForObject (1 samples, 0.75%)</title><rect x="152.0" y="257" width="8.8" height="15.0" fill="rgb(242,215,32)" rx="2" ry="2" />
<text text-anchor="" x="154.95" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.systemstack (3 samples, 2.26%)</title><rect x="861.7" y="177" width="26.6" height="15.0" fill="rgb(222,68,14)" rx="2" ry="2" />
<text text-anchor="" x="864.73" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.heapBitsSetType (2 samples, 1.50%)</title><rect x="480.2" y="113" width="17.8" height="15.0" fill="rgb(222,218,0)" rx="2" ry="2" />
<text text-anchor="" x="483.23" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>strings.Index (2 samples, 1.50%)</title><rect x="1110.2" y="209" width="17.7" height="15.0" fill="rgb(206,97,10)" rx="2" ry="2" />
<text text-anchor="" x="1113.15" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mallocgc (5 samples, 3.76%)</title><rect x="418.1" y="129" width="44.4" height="15.0" fill="rgb(212,145,38)" rx="2" ry="2" />
<text text-anchor="" x="421.12" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runt..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/url.unescape (3 samples, 2.26%)</title><rect x="1048.0" y="177" width="26.7" height="15.0" fill="rgb(229,23,9)" rx="2" ry="2" />
<text text-anchor="" x="1051.05" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sync.(*Mutex).Lock (1 samples, 0.75%)</title><rect x="560.1" y="177" width="8.8" height="15.0" fill="rgb(253,79,1)" rx="2" ry="2" />
<text text-anchor="" x="563.08" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/url.Parse (18 samples, 13.53%)</title><rect x="968.2" y="241" width="159.7" height="15.0" fill="rgb(233,213,2)" rx="2" ry="2" />
<text text-anchor="" x="971.20" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net/url.Parse</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.systemstack (1 samples, 0.75%)</title><rect x="453.6" y="65" width="8.9" height="15.0" fill="rgb(210,217,30)" rx="2" ry="2" />
<text text-anchor="" x="456.61" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.markroot.func1 (1 samples, 0.75%)</title><rect x="98.7" y="241" width="8.9" height="15.0" fill="rgb(208,3,34)" rx="2" ry="2" />
<text text-anchor="" x="101.72" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/url.parseAuthority (4 samples, 3.01%)</title><rect x="1039.2" y="209" width="35.5" height="15.0" fill="rgb(226,37,28)" rx="2" ry="2" />
<text text-anchor="" x="1042.17" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>regexp.(*machine).tryBacktrack (30 samples, 22.56%)</title><rect x="586.7" y="177" width="266.2" height="15.0" fill="rgb(214,26,8)" rx="2" ry="2" />
<text text-anchor="" x="589.69" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >regexp.(*machine).tryBacktrack</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sync.(*Mutex).Unlock (1 samples, 0.75%)</title><rect x="568.9" y="177" width="8.9" height="15.0" fill="rgb(210,84,7)" rx="2" ry="2" />
<text text-anchor="" x="571.95" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>regexp.(*Regexp).allMatches (37 samples, 27.82%)</title><rect x="533.5" y="225" width="328.2" height="15.0" fill="rgb(246,64,7)" rx="2" ry="2" />
<text text-anchor="" x="536.46" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >regexp.(*Regexp).allMatches</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.newarray (3 samples, 2.26%)</title><rect x="356.0" y="145" width="26.6" height="15.0" fill="rgb(212,189,10)" rx="2" ry="2" />
<text text-anchor="" x="359.02" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.memclr (1 samples, 0.75%)</title><rect x="382.6" y="129" width="8.9" height="15.0" fill="rgb(242,118,20)" rx="2" ry="2" />
<text text-anchor="" x="385.63" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>testing.(*B).runN (116 samples, 87.22%)</title><rect x="160.8" y="289" width="1029.2" height="15.0" fill="rgb(210,30,9)" rx="2" ry="2" />
<text text-anchor="" x="163.83" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >testing.(*B).runN</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>learn/perf.BenchmarkHandler (116 samples, 87.22%)</title><rect x="160.8" y="273" width="1029.2" height="15.0" fill="rgb(237,111,27)" rx="2" ry="2" />
<text text-anchor="" x="163.83" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >learn/perf.BenchmarkHandler</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>regexp.(*Regexp).FindAllStringSubmatch (42 samples, 31.58%)</title><rect x="533.5" y="241" width="372.6" height="15.0" fill="rgb(212,82,4)" rx="2" ry="2" />
<text text-anchor="" x="536.46" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >regexp.(*Regexp).FindAllStringSubmatch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bytes.Equal (1 samples, 0.75%)</title><rect x="267.3" y="145" width="8.9" height="15.0" fill="rgb(228,192,31)" rx="2" ry="2" />
<text text-anchor="" x="270.29" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.newobject (1 samples, 0.75%)</title><rect x="382.6" y="161" width="8.9" height="15.0" fill="rgb(207,89,30)" rx="2" ry="2" />
<text text-anchor="" x="385.63" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt.(*pp).doPrintf (2 samples, 1.50%)</title><rect x="169.7" y="225" width="17.7" height="15.0" fill="rgb(222,114,42)" rx="2" ry="2" />
<text text-anchor="" x="172.70" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcentral).cacheSpan (2 samples, 1.50%)</title><rect x="861.7" y="129" width="17.8" height="15.0" fill="rgb(217,70,43)" rx="2" ry="2" />
<text text-anchor="" x="864.73" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mapiterinit (3 samples, 2.26%)</title><rect x="506.8" y="161" width="26.7" height="15.0" fill="rgb(209,82,5)" rx="2" ry="2" />
<text text-anchor="" x="509.84" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bytes.(*Buffer).Write (1 samples, 0.75%)</title><rect x="187.4" y="209" width="8.9" height="15.0" fill="rgb(238,219,7)" rx="2" ry="2" />
<text text-anchor="" x="190.44" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (133 samples, 100%)</title><rect x="10.0" y="337" width="1180.0" height="15.0" fill="rgb(234,75,7)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.makeslice (1 samples, 0.75%)</title><rect x="462.5" y="161" width="8.9" height="15.0" fill="rgb(254,157,15)" rx="2" ry="2" />
<text text-anchor="" x="465.48" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/http/httptest.(*ResponseRecorder).WriteHeader (16 samples, 12.03%)</title><rect x="391.5" y="193" width="142.0" height="15.0" fill="rgb(222,88,28)" rx="2" ry="2" />
<text text-anchor="" x="394.50" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net/http/httptest...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bytes.HasPrefix (4 samples, 3.01%)</title><rect x="240.7" y="161" width="35.5" height="15.0" fill="rgb(245,133,43)" rx="2" ry="2" />
<text text-anchor="" x="243.68" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >byt..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/http.Header.Set (7 samples, 5.26%)</title><rect x="329.4" y="193" width="62.1" height="15.0" fill="rgb(232,151,37)" rx="2" ry="2" />
<text text-anchor="" x="332.40" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net/ht..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gentraceback (1 samples, 0.75%)</title><rect x="98.7" y="193" width="8.9" height="15.0" fill="rgb(236,46,8)" rx="2" ry="2" />
<text text-anchor="" x="101.72" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/url.escape (4 samples, 3.01%)</title><rect x="994.8" y="193" width="35.5" height="15.0" fill="rgb(235,210,37)" rx="2" ry="2" />
<text text-anchor="" x="997.81" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/http/httptest.cloneHeader (16 samples, 12.03%)</title><rect x="391.5" y="177" width="142.0" height="15.0" fill="rgb(225,219,32)" rx="2" ry="2" />
<text text-anchor="" x="394.50" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net/http/httptest...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.75%)</title><rect x="879.5" y="161" width="8.8" height="15.0" fill="rgb(206,30,29)" rx="2" ry="2" />
<text text-anchor="" x="882.47" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mallocgc (3 samples, 2.26%)</title><rect x="480.2" y="129" width="26.6" height="15.0" fill="rgb(239,103,11)" rx="2" ry="2" />
<text text-anchor="" x="483.23" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mallocgc (1 samples, 0.75%)</title><rect x="533.5" y="177" width="8.8" height="15.0" fill="rgb(219,15,41)" rx="2" ry="2" />
<text text-anchor="" x="536.46" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mallocgc (1 samples, 0.75%)</title><rect x="462.5" y="145" width="8.9" height="15.0" fill="rgb(225,27,9)" rx="2" ry="2" />
<text text-anchor="" x="465.48" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.memclr (1 samples, 0.75%)</title><rect x="462.5" y="129" width="8.9" height="15.0" fill="rgb(240,131,12)" rx="2" ry="2" />
<text text-anchor="" x="465.48" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/textproto.MIMEHeader.Get (2 samples, 1.50%)</title><rect x="311.7" y="177" width="17.7" height="15.0" fill="rgb(232,218,5)" rx="2" ry="2" />
<text text-anchor="" x="314.65" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mapassign1 (4 samples, 3.01%)</title><rect x="471.4" y="161" width="35.4" height="15.0" fill="rgb(254,84,6)" rx="2" ry="2" />
<text text-anchor="" x="474.35" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >run..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gcBgMarkWorker (7 samples, 5.26%)</title><rect x="98.7" y="305" width="62.1" height="15.0" fill="rgb(213,199,19)" rx="2" ry="2" />
<text text-anchor="" x="101.72" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtim..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.newobject (3 samples, 2.26%)</title><rect x="1154.5" y="241" width="26.6" height="15.0" fill="rgb(247,32,50)" rx="2" ry="2" />
<text text-anchor="" x="1157.51" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>regexp.(*Regexp).put (3 samples, 2.26%)</title><rect x="551.2" y="193" width="26.6" height="15.0" fill="rgb(206,129,25)" rx="2" ry="2" />
<text text-anchor="" x="554.20" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.makeslice (1 samples, 0.75%)</title><rect x="533.5" y="193" width="8.8" height="15.0" fill="rgb(242,158,13)" rx="2" ry="2" />
<text text-anchor="" x="536.46" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>strings.indexShortStr (1 samples, 0.75%)</title><rect x="1181.1" y="225" width="8.9" height="15.0" fill="rgb(219,216,29)" rx="2" ry="2" />
<text text-anchor="" x="1184.13" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/url.shouldEscape (2 samples, 1.50%)</title><rect x="1012.6" y="177" width="17.7" height="15.0" fill="rgb(234,3,38)" rx="2" ry="2" />
<text text-anchor="" x="1015.56" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/textproto.CanonicalMIMEHeaderKey (1 samples, 0.75%)</title><rect x="320.5" y="161" width="8.9" height="15.0" fill="rgb(240,167,23)" rx="2" ry="2" />
<text text-anchor="" x="323.53" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>regexp.(*Regexp).FindAllStringSubmatch.func1 (1 samples, 0.75%)</title><rect x="533.5" y="209" width="8.8" height="15.0" fill="rgb(247,112,10)" rx="2" ry="2" />
<text text-anchor="" x="536.46" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mallocgc (3 samples, 2.26%)</title><rect x="356.0" y="129" width="26.6" height="15.0" fill="rgb(213,168,45)" rx="2" ry="2" />
<text text-anchor="" x="359.02" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fmt.Fprintf (41 samples, 30.83%)</title><rect x="169.7" y="241" width="363.8" height="15.0" fill="rgb(214,41,19)" rx="2" ry="2" />
<text text-anchor="" x="172.70" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >fmt.Fprintf</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/url.(*URL).EscapedPath (5 samples, 3.76%)</title><rect x="985.9" y="209" width="44.4" height="15.0" fill="rgb(240,187,11)" rx="2" ry="2" />
<text text-anchor="" x="988.94" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >net/..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.memclr (1 samples, 0.75%)</title><rect x="498.0" y="113" width="8.8" height="15.0" fill="rgb(217,61,52)" rx="2" ry="2" />
<text text-anchor="" x="500.97" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime._ExternalCode (10 samples, 7.52%)</title><rect x="10.0" y="305" width="88.7" height="15.0" fill="rgb(253,64,42)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime._E..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime._System (10 samples, 7.52%)</title><rect x="10.0" y="321" width="88.7" height="15.0" fill="rgb(220,46,40)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime._S..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mallocgc (5 samples, 3.76%)</title><rect x="861.7" y="209" width="44.4" height="15.0" fill="rgb(235,81,15)" rx="2" ry="2" />
<text text-anchor="" x="864.73" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runt..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.convT2E (1 samples, 0.75%)</title><rect x="932.7" y="241" width="8.9" height="15.0" fill="rgb(227,50,28)" rx="2" ry="2" />
<text text-anchor="" x="935.71" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.markroot (1 samples, 0.75%)</title><rect x="98.7" y="273" width="8.9" height="15.0" fill="rgb(207,226,47)" rx="2" ry="2" />
<text text-anchor="" x="101.72" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/http.removeEmptyPort (1 samples, 0.75%)</title><rect x="959.3" y="241" width="8.9" height="15.0" fill="rgb(246,107,8)" rx="2" ry="2" />
<text text-anchor="" x="962.32" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>strings.Contains (1 samples, 0.75%)</title><rect x="1181.1" y="257" width="8.9" height="15.0" fill="rgb(220,73,37)" rx="2" ry="2" />
<text text-anchor="" x="1184.13" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>net/http.(*htmlSig).match (3 samples, 2.26%)</title><rect x="276.2" y="177" width="26.6" height="15.0" fill="rgb(215,18,15)" rx="2" ry="2" />
<text text-anchor="" x="279.17" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sync/atomic.AddUint32 (1 samples, 0.75%)</title><rect x="568.9" y="161" width="8.9" height="15.0" fill="rgb(218,110,45)" rx="2" ry="2" />
<text text-anchor="" x="571.95" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.newobject (3 samples, 2.26%)</title><rect x="1127.9" y="225" width="26.6" height="15.0" fill="rgb(246,186,51)" rx="2" ry="2" />
<text text-anchor="" x="1130.89" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime/internal/atomic.Loadp (2 samples, 1.50%)</title><rect x="915.0" y="209" width="17.7" height="15.0" fill="rgb(230,170,46)" rx="2" ry="2" />
<text text-anchor="" x="917.96" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>regexp.(*machine).backtrack (31 samples, 23.31%)</title><rect x="577.8" y="193" width="275.1" height="15.0" fill="rgb(253,29,38)" rx="2" ry="2" />
<text text-anchor="" x="580.82" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >regexp.(*machine).backtrack</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mheap).freeSpan.func1 (1 samples, 0.75%)</title><rect x="1163.4" y="177" width="8.9" height="15.0" fill="rgb(248,216,27)" rx="2" ry="2" />
<text text-anchor="" x="1166.38" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcache).nextFree.func1 (2 samples, 1.50%)</title><rect x="861.7" y="161" width="17.8" height="15.0" fill="rgb(231,199,47)" rx="2" ry="2" />
<text text-anchor="" x="864.73" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mallocgc (3 samples, 2.26%)</title><rect x="1127.9" y="209" width="26.6" height="15.0" fill="rgb(232,142,28)" rx="2" ry="2" />
<text text-anchor="" x="1130.89" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.makemap (3 samples, 2.26%)</title><rect x="1127.9" y="241" width="26.6" height="15.0" fill="rgb(239,26,44)" rx="2" ry="2" />
<text text-anchor="" x="1130.89" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>learn/perf.handler (87 samples, 65.41%)</title><rect x="169.7" y="257" width="771.9" height="15.0" fill="rgb(254,135,49)" rx="2" ry="2" />
<text text-anchor="" x="172.70" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >learn/perf.handler</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.heapBitsSetType (3 samples, 2.26%)</title><rect x="427.0" y="113" width="26.6" height="15.0" fill="rgb(230,57,15)" rx="2" ry="2" />
<text text-anchor="" x="429.99" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.heapBitsSetType (2 samples, 1.50%)</title><rect x="364.9" y="113" width="17.7" height="15.0" fill="rgb(242,104,11)" rx="2" ry="2" />
<text text-anchor="" x="367.89" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mallocgc (1 samples, 0.75%)</title><rect x="382.6" y="145" width="8.9" height="15.0" fill="rgb(216,119,25)" rx="2" ry="2" />
<text text-anchor="" x="385.63" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.makeslice (1 samples, 0.75%)</title><rect x="852.9" y="193" width="8.8" height="15.0" fill="rgb(248,148,15)" rx="2" ry="2" />
<text text-anchor="" x="855.86" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
